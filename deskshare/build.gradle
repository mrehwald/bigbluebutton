apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

version = '0.9.0'
def appName = 'deskshare'
archivesBaseName = appName

task resolveDeps(type: Copy) {
    into('lib')
    from configurations.default
    from configurations.default.allArtifacts.file
}

/*
 * Seems like we need this here and in the sub-projects section for testng to resolve.
 * (ralam Oct 4, 2009)
 */
repositories {
	mavenCentral()
	mavenLocal()
}

/****
 * NOTES
 *  1. You cannot use provideCompile here as gradle will complain. But you can use it in the sub-projects.
 */
dependencies {
	compile 'org.scala-lang:scala-library:2.11.12'
	testCompile 'org.scalatest:scalatest_2.11:3.0.0'
	testCompile 'junit:junit:4.12'

	// Servlet
	providedCompile 'javax.servlet:servlet-api:2.5@jar'
	
  // Mina
  compile 'org.apache.mina:mina-core:2.0.8@jar'
  compile 'org.apache.mina:mina-integration-beans:2.0.8@jar'
  compile 'org.apache.mina:mina-integration-jmx:2.0.8@jar'
	
  // Spring 
  compile 'org.springframework:spring-web:4.0.8.RELEASE@jar' 
  compile  'org.springframework:spring-beans:4.0.8.RELEASE@jar'
  compile 'org.springframework:spring-context:4.0.8.RELEASE@jar'
  compile 'org.springframework:spring-core:4.0.8.RELEASE@jar'
	
	// Red5
	providedCompile 'org.red5:red5-server:v1.0.8-RELEASE@jar'
	providedCompile 'org.red5:red5-server-common:v1.0.8-RELEASE@jar'
	compile group: 'org.red5', name: 'red5-io', version: 'v1.0.8-RELEASE'



	// Logging
	compile 'ch.qos.logback:logback-core:1.1.2@jar'
	compile 'ch.qos.logback:logback-classic:1.1.2@jar'
	compile 'org.slf4j:log4j-over-slf4j:1.7.9@jar'
	compile 'org.slf4j:jcl-over-slf4j:1.7.9@jar'
	compile 'org.slf4j:jul-to-slf4j:1.7.9@jar'
	compile 'org.slf4j:slf4j-api:1.7.9@jar'

	// Needed for the JVM shutdown hook but needs to be put into red5/lib dir.
	// Otherwise we get exception on aop utils class not found.
	providedCompile 'org.springframework:spring-aop:4.3.12.RELEASE@jar'
	compile 'aopalliance:aopalliance:1.0@jar'
	        
  // Testing
//  compile 'org.testng:testng:5.8@jar' 
  compile 'org.easymock:easymock:2.4@jar'
	
	compile project(':common')
  compile 'commons-fileupload:commons-fileupload:1.2.2@jar'
	compile 'commons-io:commons-io:2.1@jar' 
		

	compile 'net.lag:configgy:2.0.0@jar'
	
	//redis
	compile 'redis.clients:jedis:2.0.0'
	compile 'commons-pool:commons-pool:1.5.6'

	compile 'org.bigbluebutton:bbb-common-message_2.12:0.0.19-SNAPSHOT'
}

test {
	useTestNG()
}



task deploy() {
	doLast {
		println 'Entering *deploy* step'
		def myappsDir = System.getenv("RED5APPSDIR")
		def targetDir = new File("${myappsDir}/$archivesBaseName")
		println "cleaning up target deploy directory $targetDir"
		if (targetDir.exists()) ant.delete(dir: targetDir)
		ant.mkdir(dir: targetDir)
		//       ant.copy(todir: targetDir) {
		//           fileset(dir: "$buildDir/$archivesBaseName")
		//       }
		ant.copy file: war.archivePath, todir: targetDir
	}
}