apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

buildDir="$projectDir/target"

task resolveDeps(type: Copy) {
    into('lib')
    from configurations.default
    from configurations.default.allArtifacts.file
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
	compile 'org.bigbluebutton:bbb-common-web:0.0.2-SNAPSHOT'


  // XML creation speedup
  compile 'org.freemarker:freemarker:2.3.23'

	//junit
	compile 'junit:junit:4.8.2'

	// Testing
	testCompile 'org.testng:testng:5.8@jar'
	testCompile 'org.easymock:easymock:2.4@jar'
}

sourceSets {
	main {
			java {
					srcDir 'src/java'
			}
			resources {
					srcDir 'src/resources'
			}
	}
	test {
		java {
				srcDir 'test/unit'
		}
		resources {
				srcDir 'test/resources'
		}
}
}

test {
	useTestNG()
}

task deploy() {
	doLast {
		println 'Entering *deploy* step'
		def myappsDir = System.getenv("TOMCATAPPSDIR")
		def targetDir = new File("${myappsDir}/$archivesBaseName")
		println "cleaning up target deploy directory $targetDir"
		if (targetDir.exists()) ant.delete(dir: targetDir)
		ant.mkdir(dir: targetDir)
		ant.copy(todir: targetDir) {
			fileset(dir: "$buildDir/$archivesBaseName")
		}
		ant.copy file: war.archivePath, todir: targetDir
	}
}